on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      name: Checkout repository

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Extract build scripts
      run: move build/* .

    - name: Set up environment variables
      run: |
        $pairs = (python3 get_env.py)
        $pairs | ForEach-Object (echo $pair | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append)
  
    - name: Checkout temporary copy of MagPy
      uses: actions/checkout@v2
      with:
        path: 'mp2'

    - name: Create create requirements.txt
      run: |
        pip3 install --use-feature=in-tree-build ./mp2
        echo 'y' | pip3 uninstall MagPy4
        pip3 freeze > requirements.txt

    - name: Install pynsist and additional packages
      run: |
        pip3 install pynsist
        pip3 install wheel
        pip3 install requests

    - name: Copy over files needed for tkinter
      run: |
        mkdir lib
        mkdir pynsist_pkgs
        python pynsist_helper.py
        ls pynsist_pkgs

    - name: Create pip_wheels directory
      run: mkdir pip_wheels

    - name: Clone fflib
      uses: actions/checkout@v2
      with:
        repository: igpp-ucla/fflib
        token : ${{ secrets.GITHUB_TOKEN }} # `GitHub_PAT` is a secret that contains your PAT
        path: fflib

    - name: Create fflib wheel
      run: pip3 wheel fflib/ -w pip_wheels

    - name: Create cdflib wheel
      run: pip3 wheel cdflib -w pip_wheels

    - name: Create installer.cfg
      run: python config.py

    - name: Build executable
      run: pynsist installer.cfg

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        tag: ${{ env.vtag_name }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: .\build\nsis\${{ env.installer_path }}
        asset_name: ${{ env.installer_name }}
